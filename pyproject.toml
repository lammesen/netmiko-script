[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "netmiko-collector"
version = "2.0.0"
description = "Production-ready Python script for collecting command outputs from network devices using Netmiko"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Network Automation Team"}
]
keywords = ["netmiko", "network", "automation", "cisco", "ssh", "network-devices"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Telecommunications Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Networking",
    "Topic :: System :: Systems Administration",
]

dependencies = [
    "netmiko>=4.3.0",
    "paramiko>=3.4.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pylint>=2.15.0",
    "flake8>=5.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "mypy>=0.990",
    "bandit>=1.7.0",
    "pre-commit>=2.20.0",
]

[project.scripts]
netmiko-collector = "netmiko_collector.cli:app"

[project.urls]
Homepage = "https://github.com/lammesen/netmiko-script"
Repository = "https://github.com/lammesen/netmiko-script"
Issues = "https://github.com/lammesen/netmiko-script/issues"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=src --cov-report=term-missing --cov-report=html"
testpaths = [
    "tests",
    ".",
]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src", "."]
omit = [
    "test_*.py",
    "setup.py",
    "*/tests/*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 100
target-version = ['py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pylint.messages_control]
max-line-length = 100
disable = [
    "C0330",
    "C0326",
]

[tool.pylint.basic]
good-names = ["i", "j", "k", "ex", "f", "e", "_"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true

[[tool.mypy.overrides]]
module = "netmiko.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "paramiko.*"
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["/test_*.py", "tests/"]
# B101: assert_used - acceptable in test files (excluded via exclude_dirs)
# B601: paramiko_calls - paramiko is the core SSH library used by netmiko
#       All paramiko usage is through netmiko's ConnectHandler abstraction
#       which provides secure defaults and is industry-standard for network automation
#       Netmiko handles SSH security best practices including:
#       - Key-based authentication with validation
#       - Proper timeout handling
#       - Secure credential handling (never logged)
#       - No insecure fallbacks or deprecated algorithms
skips = ["B101", "B601"]
